name: ZAP Baseline DAST

on:
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 2 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  zap:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24-dind
        options: >-
          --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start stack (db + app)
        env:
          SECURITY_ENC_MASTER_KEY: dev-dev-dev-dev-dev-dev-dev-dev
          SECURITY_ENC_ACTIVE_KEY_ID: k1
          SECURITY_JWT_SECRET: dev-jwt-secret-please-change
          POSTGRES_DB: emr
          POSTGRES_USER: emr
          POSTGRES_PASSWORD: emrpass
        run: |
          docker compose version
          docker compose up -d --build

      - name: Wait for health
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/actuator/health >/dev/null; then
              echo "App is healthy"; exit 0; fi
            sleep 5
          done
          echo "App didn't become healthy in time"; docker compose logs --no-color | tail -n 200; exit 1

      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -m 5'
          allow_issue_writing: false

      - name: Upload ZAP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: |
            report_html.html
            report_json.json
            report_md.md
          if-no-files-found: ignore

      - name: Tear down
        if: always()
        run: docker compose down -v
